#!/bin/bash
ips_liberados=$1
redirects=$2
systemctl stop firewalld

enable_forward(){
	sysctl net.ipv4.ip_forward=1 > /dev/null
	iptables -t nat -A POSTROUTING -j MASQUERADE

	iptables -P FORWARD DROP
	for i in $(cat $ips_liberados | xargs)
	do
		iptables -A FORWARD -d $i -j ACCEPT
		iptables -A FORWARD -s $i -j ACCEPT
	done
}

enable_redirects(){
	while read LINHA
	do
		[ "$(echo $LINHA | cut -c1)" = '#' ] && continue
		[ "$LINHA" ] || continue
		set - $LINHA
		ip_origem=$(echo $1 | cut -d : -f 1)
		port_origem=$(echo $1 | cut -d : -f 2)
		shift
		ip_detino=$(echo $* | cut -d : -f 1)
		port_destino=$(echo $* | cut -d : -f 2)

		iptables -t nat -A PREROUTING -p tcp \
			--dst $ip_origem --dport $port_origem -j DNAT \
			--to-destination $ip_detino:$port_destino
	done < "$redirects"

}

clear_roles(){
	iptables -t nat -D POSTROUTING -j MASQUERADE &>/dev/null
	iptables -P FORWARD ACCEPT &>/dev/null
	rules_nu_forward=$(iptables -nL FORWARD | egrep -v 'Chain FORWARD|target     prot opt source' | wc -l)
	for i in $(eval echo "{$rules_nu_forward..5}")
	do
		iptables -D FORWARD $i &>/dev/null
	done

	rules_nu_pre=$(iptables -t nat -nL PREROUTING | egrep -v 'Chain PREROUTING|prot opt source'| wc -l)
	for i in $(eval echo "{$rules_nu_pre..2}")
	do
		iptables -t nat -D PREROUTING $i &>/dev/null
	done
}

msg_padrao="
\nIndique arquivo de ips_liberados e ips_forward na linha de comando:
\nExemplo abaixo...
\nbash $0 ips_liberados ips_forward
\n
"

while test -n "$1"
do
	case $1 in
		--help | help)
			echo -e $msg_padrao
		;;
		--clear)
			clear_roles
		;;
		*)
			clear_roles
			enable_forward
			enable_redirects
		;;
	esac

	shift
done
