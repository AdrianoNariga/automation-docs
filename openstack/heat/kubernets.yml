heat_template_version: 2013-05-23

description: Template simples para deploy de uma instancia

resources:
  master1:
    type: OS::Nova::Server
    properties:
      name: master1.lab.k8s
      key_name: arodrigues
      flavor: small.2GB
      image: CentOS-7 64Bits
      networks:
        - port: { get_resource: server_port }
      user_data: |
        #!/bin/bash
        cat /etc/cloud/cloud.cfg | grep -v host > /tmp/cloud.cfg ; mv /tmp/cloud.cfg /etc/cloud/
        setenforce permissive
        sed -i.bak "s/SELINUX=enforcing/SELINUX=permissive/g" /etc/selinux/config
        sed -i.bak "s/#UseDNS yes/UseDNS no/g" /etc/ssh/sshd_config
        echo -e "\nssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDfUkC+X0K85f5XifA8COA9wnoSOL/VJZrz6sK72REjlnYgkGF7/ggee7AryGFcHdewlDTUxrmLJ/0EkYjBtP6xUhySRr+Z2TDsgyUFcqmKhsK91gVoyOfcKw/TPKRV1z4Sp9Xe3ZU6fLl7IG1UyDxYXf/RCyMHWx44Le2YsNxbQPqwAW/5ihskrMkCt3iZMMy3SFDYnq02ua9t/5SYfV0ulLXbWjI3Ry9oJk7jwnbd65YfH/OXHDiBVGF8e6e043vx0+jy+k2DK+DGXeFtYlLBzfH5ey3IbCHumujSycIBRvw9SyhInwthcVpCBfFp6eTd0AgzgrRt41RzBZ9RjD0p nariga@active-book
        \nssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDdQMpmcqaT02NSs4BpFkiSW+COvSzDPOTaeUL5rZtysGL2X7lLxqPPI1EUhXHvlkM+VZeFNr036wecAGH2hEE6A1L1y/gFsCOgjmshXPZ7+PixkzR4996o9qSks0agNNGUduzsMqEspSffgJM37Ylrh2sXVIzcqq8g0cU/Xe231TgtNWawikR+DyLwuow5FOlrikFt+qnMnhFMgmg6HFom1TtFZX1lLLa8sn+5nYlQrn
        tcOYK2GqbPUtlqNYfzLtEvv39zQWrq/LJIjp1z43O0Z3/RZFQsMOVMGux1+L2TkxCc5elSfJPXWke9p/j02FVpT/Nrv9x97Uq+J68OQqtP nariga@vostro.home.jab" \
        >> /home/administrator/.ssh/authorized_keys
        systemctl restart sshd
        cat > /etc/yum.repos.d/virt7-docker-common-release.repo << EOF
        [virt7-docker-common-release]
        name=virt7-docker-common-release
        baseurl=http://cbs.centos.org/repos/virt7-docker-common-release/x86_64/os/
        gpgcheck=0
        EOF
        yum install kubernetes flannel etcd vim -y
        hostnamectl set-hostname "$HOSTNAME.lab.k8s"
        echo "`ifconfig eth0 | grep broadcast | awk '{print $2}'` `hostname` `hostname -s`" >> /etc/hosts
        export HOSTNAME="$(hostname -f)"

        cat > /etc/kubernetes/config << EOF
        KUBE_LOGTOSTDERR="--logtostderr=true"
        KUBE_LOG_LEVEL="--v=0"
        KUBE_ALLOW_PRIV="--allow-privileged=false"
        KUBE_MASTER="--master=http://$HOSTNAME:8080"
        EOF

        cat > /etc/kubernetes/apiserver << EOF
        KUBE_API_ADDRESS="--address=0.0.0.0"
        KUBE_API_PORT="--port=8080"
        KUBELET_PORT="--kubelet-port=10250"
        KUBE_ETCD_SERVERS="--etcd-servers=http://127.0.0.1:2379"
        KUBE_SERVICE_ADDRESSES="--service-cluster-ip-range=10.254.0.0/16"
        #KUBE_ADMISSION_CONTROL="--admission-#control=NamespaceLifecycle,NamespaceExists,LimitRanger,SecurityContextDeny,ServiceAccount,ResourceQuota"
        KUBE_API_ARGS="--secure-port=0"
        EOF

        cat > /etc/etcd/etcd.conf << EOF
        ETCD_NAME=default
        ETCD_DATA_DIR="/var/lib/etcd/default.etcd"
        ETCD_LISTEN_CLIENT_URLS="http://0.0.0.0:2379"
        ETCD_ADVERTISE_CLIENT_URLS="http://localhost:2379"
        EOF
        systemctl restart etcd kube-apiserver kube-controller-manager kube-scheduler
        systemctl enable etcd kube-apiserver kube-controller-manager kube-scheduler
        cat > /home/administrator/flannel-config.json << EOF
        {
            "Network": "10.0.10.0/16",
            "SubnetLen": 24,
            "Backend": {
                "Type": "vxlan",
                "VNI": 1
             }
        }
        EOF
        etcdctl set /atomic.io/network/config < /home/administrator/flannel-config.json

      user_data_format: RAW

  server_port:
    type: OS::Neutron::Port
    properties:
      network_id: 46d9b2da-ee3a-456c-b093-3b413dd98d2f
      security_groups:
        - SSH-PING
        - KATELLO
        - WEB
        - KUBERNETS

  float_ip:
    type: OS::Nova::FloatingIP
    properties:
      pool: public301
  associate_float_ip:
    type: OS::Nova::FloatingIPAssociation
    properties:
      floating_ip: { get_resource: float_ip }
      server_id: { get_resource: master1 }

  minions:
    type: OS::Heat::ResourceGroup
    properties:
      count: 3
      resource_def:
        type: OS::Nova::Server
        properties:
          name: minion-%index%.lab.k8s
          image: CentOS-7 64Bits
          flavor: small.2GB
          key_name: arodrigues
          security_groups: [SSH-PING, KATELLO, WEB, KUBERNETS]
          user_data: |
            #!/bin/bash
            setenforce permissive
            sed -i.bak "s/SELINUX=enforcing/SELINUX=permissive/g" /etc/selinux/config
            sed -i.bak "s/#UseDNS yes/UseDNS no/g" /etc/ssh/sshd_config
            echo -e "\nssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDfUkC+X0K85f5XifA8COA9wnoSOL/VJZrz6sK72REjlnYgkGF7/ggee7AryGFcHdewlDTUxrmLJ/0EkYjBtP6xUhySRr+Z2TDsgyUFcqmKhsK91gVoyOfcKw/TPKRV1z4Sp9Xe3ZU6fLl7IG1UyDxYXf/RCyMHWx44Le2YsNxbQPqwAW/5ihskrMkCt3iZMMy3SFDYnq02ua9t/5SYfV0ulLXbWjI3Ry9oJk7jwnbd65YfH/OXHDiBVGF8e6e043vx0+jy+k2DK+DGXeFtYlLBzfH5ey3IbCHumujSycIBRvw9SyhInwthcVpCBfFp6eTd0AgzgrRt41RzBZ9RjD0p nariga@active-book
            \nssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDdQMpmcqaT02NSs4BpFkiSW+COvSzDPOTaeUL5rZtysGL2X7lLxqPPI1EUhXHvlkM+VZeFNr036wecAGH2hEE6A1L1y/gFsCOgjmshXPZ7+PixkzR4996o9qSks0agNNGUduzsMqEspSffgJM37Ylrh2sXVIzcqq8g0cU/Xe231TgtNWawikR+DyLwuow5FOlrikFt+qnMnhFMgmg6HFom1TtFZX1lLLa8sn+5nYlQrntcOYK2GqbPUtlqNYfzLtEvv39zQWrq/LJIjp1z43O0Z3/RZFQsMOVMGux1+L2TkxCc5elSfJPXWke9p/j02FVpT/Nrv9x97Uq+J68OQqtP nariga@vostro.home.jab" \
            >> /home/administrator/.ssh/authorized_keys
            systemctl restart sshd
            cat /etc/cloud/cloud.cfg | grep -v host > /tmp/cloud.cfg ; mv /tmp/cloud.cfg /etc/cloud/
            cat > /etc/yum.repos.d/virt7-docker-common-release.repo << EOF
            [virt7-docker-common-release]
            name=virt7-docker-common-release
            baseurl=http://cbs.centos.org/repos/virt7-docker-common-release/x86_64/os/
            gpgcheck=0
            EOF
            yum install kubernetes flannel vim -y
            hostnamectl set-hostname "$HOSTNAME.lab.k8s"
            echo "`ifconfig eth0 | grep broadcast | awk '{print $2}'` `hostname` `hostname -s`" >> /etc/hosts
            export HOSTNAME="$(hostname -f)"

            cat > /etc/kubernetes/config << EOF
            KUBE_LOGTOSTDERR="--logtostderr=true"
            KUBE_LOG_LEVEL="--v=0"
            KUBE_ALLOW_PRIV="--allow-privileged=false"
            KUBE_MASTER="--master=http://master1.lab.k8s:8080"
            EOF

            cat > /etc/kubernetes/kubelet << EOF
            KUBELET_ADDRESS="--address=0.0.0.0"
            # KUBELET_PORT="--port=10250"
            KUBELET_HOSTNAME="--hostname-override=$HOSTNAME"
            KUBELET_API_SERVER="--api-servers=http://master1.lab.k8s:8080"
            KUBELET_POD_INFRA_CONTAINER="--pod-infra-container-image=registry.access.redhat.com/rhel7/pod-infrastructure:latest"
            KUBELET_ARGS=""
            EOF

            cat > /etc/sysconfig/flanneld << EOF
            FLANNEL_ETCD="http://master1.lab.k8s:2379"
            FLANNEL_ETCD_KEY="/atomic.io/network"
            #FLANNEL_OPTIONS=""
            EOF
            systemctl restart kube-proxy kubelet docker flanneld
            systemctl enable kube-proxy kubelet docker flanneld

          user_data_format: RAW

# nova list | grep minion- | sed 's/cloud.uol=//g' | awk '{print $12" " $4}'
