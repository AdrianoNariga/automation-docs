##### ignorando arquivos
vim .gitignore
file.txt
directory

git add .gitignore ; git commit -m "arquivos ignorados"

##### rastreando e commitando
git add . ; git commit -m "comentario"
git commit -a -m "adicionando e comitando"

##### logs de commit
git log # todos os comits
git log -n 2 # os 2 ultimos commits
git log --oneline # exibe id do commit
git log -n 2 --oneline
git log --stat # exibe arquivos modificados

##### diff
git diff # diff entre modificados e ultimo commit
git diff --staged # entre adicionados e ultimo commit
git diff <ID> # entre modificados e commit do ID
git diff <ID>..<ID> # entre os dois IDS
git diff <ID>~2 # entre o ID e dois commits antes

##### voltando alteracoes
git checkout -- file.txt # volta ao estado do ultimo commit
git reset -- file.txt # remove da area de stage
git reset --hard # volta todos arquivos ao ultimo commit
git revert --no-edit <ID> # volta ao estado do commit
git reset --hard <ID>
## alteracoes de revert e reset deve ser feito o push

##### trabalhando com branch
git branch (exibe branch em uso)
git branch -a (exibe branchs remotas e locais)

Alternando entre branch remotas e locais
git checkout -b openstack-kilo origin/openstack-kilo (caso nao branch local)
git checkout -t origin/openstack-kilo (resmo resultado comando anterior)
git clone -b openstack-kilo <link> (para fazer clone somente da branch)
git checkout openstack-kilo (alterna para o branch openstack-kilo)

git pull

git checkout master (alterna para o branch master)
git checkout -b icehouse (cria branch icehouse apartir do master)
git push --all (aplica todas alteracoes locais no repositorio remoto)
git fetch --all (sincroniza commits)

Alterando master apartir do dev
git checkout openstack-kilo
git push origin openstack-kilo (aplicando mudancas no branch)

git checkout master (alterna para o branch master)
git branch --no-merged (exibe quais branch disponiveis para merge)
git merge openstack-kilo (aplica alteracoes do dev)
git rebase openstack-kilo (faz merge com melhor organizacao nos commits)
git branch --no-merged
git branch --merged (exibe quais branch ja estam mescladas)
git push (envia alteracoes para repositorio remoto)

git branch -d name_branch (deleta branch, deve-se estar fora)
git branch -D name_branch (deleta branch descartando alteracao)
git push origin :name_branch (deleta a branch remota)

## salva a senha para evitar de digitar a senha nos pushs
git config --global credential.helper 'cache --timeout=3600'
